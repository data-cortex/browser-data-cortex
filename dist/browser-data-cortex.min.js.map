{"version":3,"file":"browser-data-cortex.min.js","sources":["../src/index.js"],"sourcesContent":["const EVENT_SEND_COUNT = 10;\nconst LOG_SEND_COUNT = 10;\nconst DELAY_MS = 2 * 1000;\n\nconst STRING_PROP_LIST = [\n  'kingdom',\n  'phylum',\n  'class',\n  'order',\n  'family',\n  'genus',\n  'species',\n  'spend_currency',\n  'spend_type',\n  'network',\n  'channel',\n];\nconst LONG_STRING_PROP_LIST = ['group_tag', 'from_tag'];\n\nconst NUMBER_PROP_LIST = [\n  'float1',\n  'float2',\n  'float3',\n  'float4',\n  'spend_amount',\n];\n\nconst OTHER_PROP_LIST = ['type', 'event_index', 'event_datetime', 'to_list'];\n\nconst EVENT_PROP_LIST = _union(\n  STRING_PROP_LIST,\n  LONG_STRING_PROP_LIST,\n  NUMBER_PROP_LIST,\n  OTHER_PROP_LIST\n);\n\nconst API_BASE_URL = 'https://api.data-cortex.com';\n\nlet g_apiBaseUrl = API_BASE_URL;\n\nlet g_isReady = false;\nlet g_isSending = false;\nlet g_timeout = false;\n\nlet g_apiKey = false;\nlet g_orgName = false;\nlet g_appVer = '0';\n\nlet g_userTag = false;\nlet g_eventList = [];\nlet g_hasSendInstall = false;\nlet g_lastDAUTime = 0;\nlet g_sessionKey = false;\nlet g_deviceTag = false;\nlet g_nextIndex = 0;\n\nlet g_delayCount = 0;\n\nconst g_defaultBundle = {};\n\nlet g_logList = [];\n\nlet g_errorLog = function (...args) {\n  console.error('Data Cortex Error:', ...args);\n};\n\nfunction _errorLog(...args) {\n  g_errorLog(...args);\n}\n\nfunction init(opts) {\n  g_apiBaseUrl =\n    opts.base_url || _getStoredItem('dc.base_url', false) || API_BASE_URL;\n\n  g_apiKey = opts.api_key;\n  g_orgName = opts.org_name;\n  g_appVer = opts.app_ver || '0';\n  g_userTag = _getStoredItem('dc.user_tag', false);\n\n  // Set custom error logging function if provided\n  if (opts.errorLog && typeof opts.errorLog === 'function') {\n    g_errorLog = opts.errorLog;\n  }\n\n  g_eventList = _getStoredItem('dc.event_list', []);\n  g_nextIndex = _getStoredItem('dc.next_index', 0);\n  g_eventList.forEach((e) => {\n    if (e.event_index >= g_nextIndex) {\n      g_nextIndex = e.event_index + 1;\n    }\n  });\n\n  g_logList = _getStoredItem('dc.log_list', []);\n\n  g_lastDAUTime = _getStoredItem('dc.last_dau_time', 0);\n  g_hasSendInstall =\n    _getStoredItem('dc.has_sent_install', 0) || Boolean(g_lastDAUTime);\n  if (opts.device_tag) {\n    g_deviceTag = opts.device_tag;\n    _setStoredItem('dc.device_tag', opts.device_tag);\n  } else {\n    g_deviceTag = _loadDeviceTag();\n  }\n  if (!g_sessionKey) {\n    g_sessionKey = _generateRandomString();\n  }\n\n  _maybeSendInstall();\n  _maybeAddDau();\n  window.setInterval(_maybeAddDau, 12 * 60 * 60 * 1000);\n\n  _setupDefaultBundle();\n  g_isReady = true;\n  _sendEventsLater();\n\n  if (opts.add_error_handler) {\n    window.addEventListener('error', _onError);\n  }\n}\nfunction _onError(e) {\n  if (e) {\n    log('Javascript Error: message:', e.message, 'error:', e.error);\n  }\n}\n\nfunction isReady() {\n  return g_isReady;\n}\nfunction getDeviceTag() {\n  return g_deviceTag;\n}\n\nfunction addUserTag(userTag) {\n  g_userTag = userTag && String(userTag);\n  if (g_userTag) {\n    _setStoredItem('dc.user_tag', g_userTag);\n  } else {\n    _clearStoredItem('dc.user_tag');\n  }\n}\n\nfunction event(props) {\n  if (!props || typeof props !== 'object') {\n    throw new Error('props must be an object');\n  }\n  props.type = 'event';\n  return _internalEventAdd(props);\n}\n\nfunction economyEvent(props) {\n  if (!props || typeof props !== 'object') {\n    throw new Error('props must be an object');\n  }\n  if (!props.spend_currency) {\n    throw new Error('spend_currency is required');\n  }\n  if (typeof props.spend_amount !== 'number') {\n    throw new Error('spend_amount is required');\n  }\n\n  props.type = 'economy';\n  return _internalEventAdd(props);\n}\nfunction messageSendEvent(props) {\n  if (!props || typeof props !== 'object') {\n    throw new Error('props must be an object');\n  }\n  if (!props.from_tag) {\n    throw new Error('from_tag is required');\n  }\n  if (!props.to_tag && !props.to_list) {\n    throw new Error('to_tag or to_list is required');\n  }\n  if (props.to_list && !Array.isArray(props.to_list)) {\n    throw new Error('to_list must be an array.');\n  }\n  if (!props.to_list) {\n    props.to_list = [];\n  }\n  if (props.to_tag) {\n    props.to_list.push(props.to_tag);\n  }\n  if (props.to_list.length === 0) {\n    throw new Error('must have at least 1 in to_list or a to_tag');\n  }\n\n  props.type = 'message_send';\n  return _internalEventAdd(props);\n}\n\nfunction _getStoredItem(name, def) {\n  let ret;\n  if (name in window.localStorage) {\n    const json = window.localStorage[name];\n    try {\n      ret = JSON.parse(json);\n    } catch {\n      // _errorLog(\"Failed to parse:\",name,\"json:\",json);\n    }\n  }\n\n  if (ret === undefined) {\n    if (typeof def === 'function') {\n      ret = def();\n    } else {\n      ret = def;\n    }\n  }\n  return ret;\n}\nfunction _setStoredItem(name, value) {\n  const json = JSON.stringify(value);\n  window.localStorage[name] = json;\n}\nfunction _clearStoredItem(name) {\n  delete window.localStorage[name];\n}\n\nfunction _loadDeviceTag() {\n  let text = _getStoredItem('dc.device_tag', false);\n  if (!text) {\n    text = _generateRandomString();\n    _setStoredItem('dc.device_tag', text);\n  }\n  return text;\n}\n\nfunction _maybeSendInstall() {\n  if (!g_hasSendInstall) {\n    g_hasSendInstall = true;\n    _setStoredItem('dc.has_sent_install', true);\n\n    _internalEventAdd({\n      type: 'install',\n      kingdom: 'organic',\n      phylum: 'organic',\n      class: 'organic',\n      order: 'organic',\n      family: 'organic',\n      genus: 'organic',\n      species: 'organic',\n    });\n  }\n}\nfunction _generateRandomString() {\n  let text = '';\n  const crypto = window.crypto || window.msCrypto;\n  if (crypto && crypto.getRandomValues) {\n    const array = new Uint32Array(8);\n    crypto.getRandomValues(array);\n    for (let i = 0; i < array.length; i++) {\n      text += array[i].toString(36);\n    }\n  } else {\n    while (text.length < 32) {\n      text += Math.random().toString(36).slice(2);\n    }\n  }\n  text = text.slice(0, 32);\n  return text;\n}\n\nfunction _maybeAddDau() {\n  const delta = Date.now() - g_lastDAUTime;\n  if (delta > 24 * 60 * 60 * 1000) {\n    _internalEventAdd({ type: 'dau' });\n    g_lastDAUTime = Date.now();\n    _setStoredItem('dc.last_dau_time', g_lastDAUTime);\n  }\n}\n\nfunction _internalEventAdd(props) {\n  props.event_index = g_nextIndex++;\n  if (!props.event_datetime) {\n    props.event_datetime = new Date().toISOString();\n  }\n\n  if (g_sessionKey) {\n    props.group_tag = g_sessionKey;\n  }\n  STRING_PROP_LIST.forEach((p) => {\n    if (p in props) {\n      const val = props[p];\n      const s = val && String(val);\n      if (s) {\n        props[p] = s.slice(0, 32);\n      } else {\n        delete props[p];\n      }\n    }\n  });\n  LONG_STRING_PROP_LIST.forEach((p) => {\n    if (p in props) {\n      const val = props[p];\n      const s = val && String(val);\n      if (s) {\n        props[p] = s.slice(0, 64);\n      } else {\n        delete props[p];\n      }\n    }\n  });\n  NUMBER_PROP_LIST.forEach((p) => {\n    if (p in props) {\n      let val = props[p];\n      if (typeof val !== 'number') {\n        val = parseFloat(val);\n      }\n      if (isFinite(val)) {\n        props[p] = val;\n      } else {\n        delete props[p];\n      }\n    }\n  });\n\n  const e = _pick(props, EVENT_PROP_LIST);\n  g_eventList.push(e);\n  _setStoredItem('dc.event_list', g_eventList);\n  _sendEventsLater();\n  return e;\n}\n\nfunction _sendEventsLater(delay) {\n  if (!g_timeout && g_isReady && !g_isSending) {\n    g_timeout = window.setTimeout(() => {\n      g_timeout = false;\n      _sendEvents();\n    }, delay || 0);\n  }\n}\nfunction _sendEvents() {\n  if (g_isReady && !g_isSending && g_eventList.length > 0) {\n    g_isSending = true;\n\n    const bundle = Object.assign({}, g_defaultBundle, {\n      api_key: g_apiKey,\n      app_ver: g_appVer,\n      device_tag: g_deviceTag,\n    });\n    if (g_userTag) {\n      bundle.user_tag = g_userTag;\n    }\n    bundle.events = [];\n    let first_event = false;\n    g_eventList.some((e) => {\n      if (!first_event) {\n        first_event = e;\n        bundle.events.push(e);\n      } else if (first_event.session_key === e.session_key) {\n        bundle.events.push(e);\n      }\n      return bundle.events.length < EVENT_SEND_COUNT;\n    });\n\n    const current_time = encodeURIComponent(new Date().toISOString());\n    const url = `${g_apiBaseUrl}/${g_orgName}/1/track?current_time=${current_time}`;\n    const opts = {\n      url,\n      method: 'POST',\n      body: bundle,\n    };\n    _request(opts, (err, status, body) => {\n      let remove = true;\n      if (err === 'status') {\n        if (status === 400) {\n          _errorLog('Bad request, please check parameters, error:', body);\n        } else if (status === 403) {\n          _errorLog('Bad API Key, error:', body);\n          g_isReady = false;\n        } else if (status === 409) {\n          // Dup send?\n        } else {\n          remove = false;\n          g_delayCount++;\n        }\n      } else if (err) {\n        remove = false;\n        g_delayCount++;\n      } else {\n        g_delayCount = 0;\n      }\n      if (remove) {\n        _removeEvents(bundle.events);\n      }\n\n      g_isSending = false;\n      if (g_eventList.length > 0) {\n        _sendEventsLater(g_delayCount * DELAY_MS);\n      }\n    });\n  }\n}\n\nfunction _request(args, done) {\n  let done_once = false;\n  function request_done(...args) {\n    if (!done_once) {\n      done_once = true;\n      done(...args);\n    }\n  }\n\n  const method = args.method;\n\n  const default_headers = {\n    Accept: 'application/json',\n  };\n  let body = null;\n  if (args.body instanceof FormData) {\n    body = args.body;\n  } else if (args.body) {\n    body = JSON.stringify(args.body);\n    default_headers['Content-Type'] = 'text/plain';\n  }\n  const headers = Object.assign({}, default_headers, args.headers);\n\n  const url = args.url;\n\n  // Build fetch options\n  const fetchOptions = {\n    method,\n    headers,\n  };\n\n  if (body) {\n    fetchOptions.body = body;\n  }\n\n  // Add timeout support using AbortController\n  let timeoutId;\n  if (args.timeout) {\n    const controller = new AbortController();\n    fetchOptions.signal = controller.signal;\n\n    timeoutId = setTimeout(() => {\n      controller.abort();\n    }, args.timeout);\n  }\n\n  fetch(url, fetchOptions)\n    .then(async (response) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n\n      const status = response.status;\n      let responseBody = '';\n\n      try {\n        responseBody = await response.text();\n      } catch {\n        // If we can't read the response body, continue with empty string\n      }\n\n      let err = null;\n      if (status < 200 || status > 599) {\n        err = 'wierd_status';\n      } else if (status >= 300) {\n        err = 'status';\n      }\n\n      request_done(err, status, responseBody);\n    })\n    .catch((error) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n\n      if (error.name === 'AbortError') {\n        request_done('timeout');\n      } else {\n        request_done('fetch_error');\n      }\n    });\n}\n\nfunction _removeEvents(event_list) {\n  g_eventList = g_eventList.filter((e) => {\n    return !event_list.some((e2) => {\n      return e.event_index === e2.event_index;\n    });\n  });\n  _setStoredItem('dc.event_list', g_eventList);\n  _setStoredItem('dc.next_index', g_nextIndex);\n}\n\nfunction _setupDefaultBundle() {\n  function regexGet(haystack, regex, def) {\n    let ret = def;\n    const matches = haystack.match(regex);\n    if (matches && matches.length > 1) {\n      ret = matches[1];\n    }\n    return ret;\n  }\n\n  const ua = navigator.userAgent;\n\n  let os = 'unknown';\n  let os_ver = 'unknown';\n  if (ua.indexOf('Win') !== -1) {\n    os = 'windows';\n    os_ver = regexGet(ua, /Windows NT ([^ ;)]*)/, 'unknown');\n  } else if (ua.indexOf('iPhone OS') !== -1) {\n    os = 'ios';\n    os_ver = regexGet(ua, /iPhone OS ([^ ;)]*)/, 'unknown');\n    os_ver = os_ver.replace(/_/g, '.');\n  } else if (ua.indexOf('iPad') !== -1) {\n    os = 'ios';\n    os_ver = regexGet(ua, /CPU OS ([^ ;)]*)/, 'unknown');\n    os_ver = os_ver.replace(/_/g, '.');\n  } else if (ua.indexOf('Mac OS X') !== -1) {\n    os = 'mac';\n    os_ver = regexGet(ua, /Mac OS X ([^ ;)]*)/, 'unknown');\n    os_ver = os_ver.replace(/_/g, '.');\n    os_ver = os_ver.replace(/\\.0$/, '');\n  } else if (ua.indexOf('Android') !== -1) {\n    os = 'android';\n    os_ver = regexGet(ua, /Android ([^ ;)]*)/, 'unknown');\n    os_ver = os_ver.replace(/_/g, '.');\n  } else if (ua.indexOf('X11') !== -1) {\n    os = 'unix';\n  } else if (ua.indexOf('Linux') !== -1) {\n    os = 'linux';\n  }\n\n  let browser = 'unknown';\n  let browser_ver = 'unknown';\n  if (ua.indexOf('Edge') !== -1) {\n    browser = 'edge';\n    browser_ver = regexGet(ua, /Edge\\/([^ ;)]*)/, 'unknown');\n  } else if (ua.indexOf('Chrome') !== -1) {\n    browser = 'chrome';\n    browser_ver = regexGet(ua, /Chrome\\/([^ ;)]*)/, 'unknown');\n  } else if (ua.indexOf('CriOS') !== -1) {\n    browser = 'chrome';\n    browser_ver = regexGet(ua, /CriOS\\/([^ ;)]*)/, 'unknown');\n  } else if (ua.indexOf('Firefox') !== -1) {\n    browser = 'firefox';\n    browser_ver = regexGet(ua, /Firefox\\/([^ ;)]*)/, 'unknown');\n  } else if (ua.indexOf('Android') !== -1) {\n    browser = 'android';\n    browser_ver = regexGet(ua, /Version\\/([^ ;)]*)/, 'unknown');\n  } else if (ua.indexOf('Safari') !== -1) {\n    browser = 'safari';\n    browser_ver = regexGet(ua, /Version\\/([^ ;)]*)/, 'unknown');\n  } else if (ua.indexOf('Trident') !== -1) {\n    browser = 'ie';\n    browser_ver = regexGet(ua, /rv:([^ ;)]*)/, 'unknown');\n  } else if (ua.indexOf('MSIE') !== -1) {\n    browser = 'ie';\n    browser_ver = regexGet(ua, /MSIE ([^ ;)]*)/, 'unknown');\n  } else if (ua.indexOf('MessengerForiOS') !== -1) {\n    browser = 'fbmessenger';\n    browser_ver = regexGet(ua, /FBAV\\/([^ ;)]*)/, 'unknown');\n  } else if (ua.indexOf('FB_IAB/MESSENGER') !== -1) {\n    browser = 'fbmessenger';\n    browser_ver = regexGet(ua, /FBAV\\/([^ ;)]*)/, 'unknown');\n  }\n\n  let device_type = 'desktop';\n  if (ua.indexOf('iPod') !== -1) {\n    device_type = 'ipod';\n  } else if (ua.indexOf('iPhone') !== -1) {\n    device_type = 'iphone';\n  } else if (ua.indexOf('iPad') !== -1) {\n    device_type = 'ipad';\n  } else if (ua.indexOf('Android') !== -1) {\n    if (ua.indexOf('Mobile') === -1) {\n      device_type = 'android_tablet';\n    } else {\n      device_type = 'android';\n    }\n  } else if (ua.indexOf('Mobile') !== -1) {\n    device_type = 'mobile';\n  }\n\n  g_defaultBundle.os = os;\n  g_defaultBundle.os_ver = os_ver;\n  g_defaultBundle.browser = browser;\n  g_defaultBundle.browser_ver = browser_ver;\n  g_defaultBundle.device_type = device_type;\n  g_defaultBundle.device_family = device_type;\n}\n\nfunction log(...args) {\n  if (!args || args.length === 0) {\n    throw new Error('log must have arguments');\n  }\n  let log_line = '';\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (i > 0) {\n      log_line += ' ';\n    }\n\n    if (_isError(arg)) {\n      log_line += arg.stack;\n    } else if (typeof arg === 'object') {\n      try {\n        log_line += JSON.stringify(arg);\n      } catch {\n        log_line += arg;\n      }\n    } else {\n      log_line += arg;\n    }\n  }\n  logEvent({ log_line });\n}\n\nconst LOG_NUMBER_PROP_LIST = ['repsonse_bytes', 'response_ms'];\n\nconst LOG_STRING_PROP_MAP = {\n  hostname: 64,\n  filename: 256,\n  log_level: 64,\n  device_tag: 62,\n  user_tag: 62,\n  remote_address: 64,\n  log_line: 65535,\n};\n\nconst LOG_OTHER_PROP_LIST = ['event_datetime'];\n\nconst LOG_PROP_LIST = _union(\n  LOG_NUMBER_PROP_LIST,\n  Object.keys(LOG_STRING_PROP_MAP),\n  LOG_OTHER_PROP_LIST\n);\n\nfunction logEvent(props) {\n  if (!props || typeof props !== 'object') {\n    throw new Error('props must be an object.');\n  }\n\n  if (!props.event_datetime) {\n    props.event_datetime = new Date().toISOString();\n  }\n\n  _objectEach(LOG_STRING_PROP_MAP, (max_len, p) => {\n    if (p in props) {\n      const val = props[p];\n      const s = val && val.toString();\n      if (s) {\n        props[p] = s.slice(0, max_len);\n      } else {\n        delete props[p];\n      }\n    }\n  });\n  LOG_NUMBER_PROP_LIST.forEach((p) => {\n    if (p in props) {\n      let val = props[p];\n      if (typeof val !== 'number') {\n        val = parseFloat(val);\n      }\n      if (isFinite(val)) {\n        props[p] = val;\n      } else {\n        delete props[p];\n      }\n    }\n  });\n\n  const e = _pick(props, LOG_PROP_LIST);\n  g_logList.push(e);\n  _setStoredItem('dc.log_list', g_logList);\n  _sendLogsLater();\n  return e;\n}\n\nfunction _removeLogs(events) {\n  g_logList.splice(0, events.length);\n  _setStoredItem('dc.log_list', g_logList);\n}\n\nfunction _isError(e) {\n  return (\n    e &&\n    e.stack &&\n    e.message &&\n    typeof e.stack === 'string' &&\n    typeof e.message === 'string'\n  );\n}\n\nlet g_logTimeout = false;\nlet g_isLogSending = false;\nlet g_logDelayCount = 0;\n\nfunction _sendLogsLater(delay = 0) {\n  if (!g_logTimeout && g_isReady && !g_isLogSending) {\n    g_logTimeout = window.setTimeout(() => {\n      g_logTimeout = false;\n      _sendLogs();\n    }, delay);\n  }\n}\nfunction _sendLogs() {\n  if (g_isReady && !g_isLogSending && g_logList.length > 0) {\n    g_isLogSending = true;\n\n    const bundle = Object.assign({}, g_defaultBundle, {\n      api_key: g_apiKey,\n      app_ver: g_appVer,\n      device_tag: g_deviceTag,\n    });\n    if (g_userTag) {\n      bundle.user_tag = g_userTag;\n    }\n    bundle.events = g_logList.slice(0, LOG_SEND_COUNT);\n\n    const url = `${g_apiBaseUrl}/${g_orgName}/1/app_log`;\n\n    const opts = {\n      url,\n      method: 'POST',\n      body: bundle,\n    };\n\n    _request(opts, (err, status, body) => {\n      let remove = true;\n      if (err === 'status') {\n        if (status === 400) {\n          _errorLog('Bad request, please check parameters, error:', body);\n        } else if (status === 403) {\n          _errorLog('Bad API Key, error:', body);\n        } else if (status === 409) {\n          // Dup send?\n        } else {\n          remove = false;\n          g_logDelayCount++;\n        }\n      } else if (err) {\n        remove = false;\n        g_logDelayCount++;\n      } else {\n        g_logDelayCount = 0;\n      }\n      if (remove) {\n        _removeLogs(bundle.events);\n      }\n\n      g_isLogSending = false;\n      if (g_logList.length > 0) {\n        _sendLogsLater(g_logDelayCount * DELAY_MS);\n      }\n    });\n  }\n}\n\nfunction flush() {\n  if (!g_isReady) {\n    _errorLog('DataCortex not ready. Call init() first.');\n    return;\n  }\n\n  // Clear any existing timeouts to prevent duplicate sends\n  if (g_timeout) {\n    window.clearTimeout(g_timeout);\n    g_timeout = false;\n  }\n  if (g_logTimeout) {\n    window.clearTimeout(g_logTimeout);\n    g_logTimeout = false;\n  }\n\n  // Send events immediately\n  if (g_eventList.length > 0 && !g_isSending) {\n    _sendEvents();\n  }\n\n  // Send logs immediately\n  if (g_logList.length > 0 && !g_isLogSending) {\n    _sendLogs();\n  }\n}\n\nfunction _objectEach(object, callback) {\n  Object.keys(object).forEach((key) => {\n    const value = object[key];\n    callback(value, key, object);\n  });\n}\n\nfunction _pick(source, keys) {\n  const dest = {};\n  keys.forEach((key) => {\n    if (key in source) {\n      dest[key] = source[key];\n    }\n  });\n  return dest;\n}\n\nfunction _union(...arrays) {\n  const dest = [];\n\n  for (let i = 0; i < arrays.length; i++) {\n    const array = arrays[i];\n    Array.prototype.push.apply(dest, array);\n  }\n\n  return dest;\n}\n\nconst DataCortex = {\n  init,\n  isReady,\n  getDeviceTag,\n  addUserTag,\n  event,\n  economyEvent,\n  messageSendEvent,\n  log,\n  logEvent,\n  flush,\n};\n\n// Only set window.DataCortex if window is available (browser environment)\nif (typeof window !== 'undefined') {\n  window.DataCortex = DataCortex;\n}\n\nexport default DataCortex;\n"],"names":["STRING_PROP_LIST","LONG_STRING_PROP_LIST","NUMBER_PROP_LIST","EVENT_PROP_LIST","_union","API_BASE_URL","g_apiBaseUrl","g_isReady","g_isSending","g_timeout","g_apiKey","g_orgName","g_appVer","g_userTag","g_eventList","g_hasSendInstall","g_lastDAUTime","g_sessionKey","g_deviceTag","g_nextIndex","g_delayCount","g_defaultBundle","g_logList","g_errorLog","args","console","error","_errorLog","_onError","e","log","message","_getStoredItem","name","def","ret","window","localStorage","json","JSON","parse","undefined","_setStoredItem","value","stringify","_generateRandomString","text","crypto","msCrypto","getRandomValues","array","Uint32Array","i","length","toString","Math","random","slice","_maybeAddDau","Date","now","_internalEventAdd","type","props","event_index","event_datetime","toISOString","group_tag","forEach","p","val","s","String","parseFloat","isFinite","_pick","push","_sendEventsLater","delay","setTimeout","_sendEvents","bundle","Object","assign","api_key","app_ver","device_tag","user_tag","events","first_event","some","session_key","current_time","encodeURIComponent","_request","url","method","body","err","status","remove","event_list","filter","e2","done","done_once","request_done","default_headers","Accept","FormData","headers","fetchOptions","timeoutId","timeout","controller","AbortController","signal","abort","fetch","then","async","clearTimeout","response","responseBody","catch","Error","log_line","arg","_isError","stack","logEvent","LOG_NUMBER_PROP_LIST","LOG_STRING_PROP_MAP","hostname","filename","log_level","remote_address","LOG_PROP_LIST","keys","object","callback","max_len","key","_sendLogsLater","g_logTimeout","g_isLogSending","g_logDelayCount","_sendLogs","splice","source","dest","arrays","Array","prototype","apply","DataCortex","init","opts","base_url","org_name","errorLog","Boolean","_loadDeviceTag","kingdom","phylum","class","order","family","genus","species","setInterval","regexGet","haystack","regex","matches","match","ua","navigator","userAgent","os","os_ver","indexOf","replace","browser","browser_ver","device_type","device_family","_setupDefaultBundle","add_error_handler","addEventListener","isReady","getDeviceTag","addUserTag","userTag","event","economyEvent","spend_currency","spend_amount","messageSendEvent","from_tag","to_tag","to_list","isArray","flush"],"mappings":"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"}